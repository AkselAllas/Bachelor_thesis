    Seis, kui oli 0 ja 1 read ära treeninud:
    viimane tile: 91%
    esimene 80%
    eelmine (1,3) 80%
    uus 75%

*******

    lr=0.001
    Seis, kui oli 0,1,2,3 read ära treeninud:
    viimane tile: 0.93506622
    esimene 0.756828308
    (1,3) 0.67977905
    (2.0) 0.7099113
    RIP

*******

    lr=0.0001
    Seis, kui oli 0,1,2,3 read ära treeninud:
    esimene 0.760437011
    (1,3) 0.69174194335937
    (2.0) 0.7212677001953125

*******

    Ilma eelneva mudeli etteandmiseta oli stuck 0.285 accuracy peal (Andsin ette fully_trained.h5)
    lr=0.001 momentum 0.5 SGD (l1 + l2 regularization, BatchNorm korrektselt 3dconv activationi vahel) min_delta = 0.001 patience 5 current.h5 fully_trained
    Seis, kui oli 0 rea ära treeninud:
    esimene 0.79576492309
    viimane  0.9268
    (1,3) 0.73625183
    (2.0) 0.717
    (3.0) 0.82525

*******

    Sama mudel, aga rohkem treenimist:
    Seis, kui oli 0,1,2,3 read ära treeninud:
    esimene 0.7581291
    viimane  0.9574203491210938
    (1,3) 0.721183776
    (2.0) 0.70648574
    (3.0) 0.8315849

*******
    enne oli test_set = 0.2

    lr=0.0001 momentum 0 SGD (clipvalue=0.5, BatchNorm korrektselt 3dconv activationi vahel), oma normalization sees. min_delta = 0 patience = 1 current.5 puudub test_set = 0.5
    Seis, kui oli 0 rea ära treeninud:
    esimene 0.788
    viimane  0.924
    (1,3) 0.73235
    (2.0) 0.6835
    (3.0) 0.8229


*******
    lr=0.0001 momentum 0 SGD (clipvalue=0.5, BatchNorm korrektselt 3dconv activationi vahel), oma normalization sees. min_delta = 0.1 patience = 3 current.5 0_row_train.h5 test_set = 0.5 batch_size=512
    Seis, kui oli 0,1,2,3 rea ära treeninud:
    esimene 0.784
    viimane  0.
    (1,3) 0.
    (2.0) 0.
    (3.0) 0.82
    model saved as: fully_trained_3.h5

*******
    Enne seda valin, kas min_delta-ga oli parem kui muidu
    lr=0.0001 momentum 0 SGD (l1 and l2 norm for everything clipvalue=0.5, BatchNorm korrektselt 3dconv activationi vahel), oma normalization sees. min_delta = 0.001 patience = 5 current.5 fully_trained_3.h5 test_set = 0.5
    Seis, kui oli 0 read 8 data_augmentiga ära treeninud:
    esimene 0.8
    viimane  0.
    (1,3) 0.6742
    (2.0) 0.768
    (3.0) 0.829

*******
    Enne seda valin, kas min_delta-ga oli parem kui muidu
    lr=0.0001 momentum 0 SGD (l1 and l2 norm for everything clipvalue=0.5, BatchNorm korrektselt 3dconv activationi vahel), oma normalization sees. min_delta = 0.001 patience = 5 current.5 fully_trained_3.h5 test_set = 0.5
    Seis, kui oli 0,1,2 read 8 data_augmentiga ära treeninud:
    esimene 0.799
    viimane  0.89
    (1,3) 0.669
    (2.0) 0.770
    (3.0) 0.823

*******
    lr=0.0001 momentum 0 SGD (l2 norm for everything clipvalue=0.5, BatchNorm korrektselt 3dconv activationi vahel), oma normalization sees. min_delta = 0.1 patience = 2 current.5 none test_set = 0.5 batch_size=16
    Seis, kui oli 0,1  read ära treeninud:
    esimene 0.77
    (0.3) 0.76
    (1.0) 0.899
    (1.1) 0.77
    (1.2) 0.789
    viimane  0.927
    (2.0) 0.743
    (3.0) 0.817

*******
    lr=0.0001 momentum 0 SGD (l2 norm for everything clipvalue=0.5, BatchNorm korrektselt 3dconv activationi vahel), oma normalization sees. min_delta = 0.1 patience = 2 current.5 none test_set = 0.5
    Seis, kui oli 0,1,2  read ära treeninud:
    esimene 0.806
    (0.3) 0.69
    (1.0) 0.91
    (1.1) 0.734
    (1.2) 0.78
    viimane  0.
    (2.0) 0.799
    (3.0) 0.839
    
*******
    Sama, aga 0.01 norm l2, min_delta=0.05
    esimene 0.773
    3.0 825

*******
    lr=0.0001 momentum 0 SGD (l2 norm for everything clipvalue=0.5, BatchNorm korrektselt 3dconv activationi vahel), oma normalization sees. min_delta = 0.03  patience = 2 current.5 test_set = OMA KOOD 1/16 val_set oli tile(1,3)
    Seis, kui oli 0,1 8 geomeetrilise augmentiga read ära treeninud:
    esimene 0.8356
    (0.3) 0.6977
    (1.0) 0.8943
    (1.1) 0.7246
    (1.2) 0.
    viimane  0.
    (2.0) 0.
    (3.0) 0.8314

